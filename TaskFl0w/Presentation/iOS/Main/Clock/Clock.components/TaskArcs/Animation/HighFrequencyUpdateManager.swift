//
//  HighFrequencyUpdateManager.swift
//  TaskFl0w
//
//  Created by Yan on 24/12/24.
//

import SwiftUI
import UIKit

/// –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –≤—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI –≤–æ –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –º–∞—Ä–∫–µ—Ä–æ–≤
final class HighFrequencyUpdateManager: ObservableObject {
    private var displayLink: CADisplayLink?
    private weak var viewModel: ClockViewModel?
    
    @Published var isHighFrequencyMode = false
    
    init(viewModel: ClockViewModel) {
        self.viewModel = viewModel
    }
    
    /// –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —á–∞—Å—Ç–æ—Ç–æ–π –∫–∞–¥—Ä–æ–≤
    func startHighFrequencyUpdates() {
        guard displayLink == nil else { return }
        
        isHighFrequencyMode = true
        
        displayLink = CADisplayLink(target: self, selector: #selector(updateFrame))
        displayLink?.preferredFramesPerSecond = 120 // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞ –¥–ª—è ProMotion
        displayLink?.add(to: .main, forMode: .common)
        
        print("üöÄ –ó–∞–ø—É—â–µ–Ω–æ –≤—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å —á–∞—Å—Ç–æ—Ç–æ–π 120 FPS")
    }
    
    /// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    func stopHighFrequencyUpdates() {
        displayLink?.invalidate()
        displayLink = nil
        
        isHighFrequencyMode = false
        
        print("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")
    }
    
    @objc private func updateFrame() {
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º ViewModel –¥–ª—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ UI
        DispatchQueue.main.async { [weak self] in
            self?.viewModel?.objectWillChange.send()
        }
    }
    
    deinit {
        stopHighFrequencyUpdates()
    }
} 