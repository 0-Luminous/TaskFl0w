//
//  SettingsTask.swift
//  TaskFl0w
//
//  Created by Yan on 11/5/25.
//

import SwiftUI

struct SettingsTask: View {
    @Environment(\.dismiss) private var dismiss
    @StateObject private var themeManager = ThemeManager.shared
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º AppStorage –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏
    @AppStorage("moveUnfinishedTasks") private var moveUnfinishedTasks = false
    @AppStorage("increasePriority") private var increasePriority = false
    @AppStorage("priorityIncreaseFrequency") private var priorityIncreaseFrequency = 0 // 0 - –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, 1 - —Ä–∞–∑ –≤ –¥–≤–∞ –¥–Ω—è, 2 - —Ä–∞–∑ –≤ —Ç—Ä–∏ –¥–Ω—è
    
    private let frequencyOptions = [
        (0, "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å"),
        (1, "–†–∞–∑ –≤ –¥–≤–∞ –¥–Ω—è"),
        (2, "–†–∞–∑ –≤ —Ç—Ä–∏ –¥–Ω—è")
    ]
    
    var body: some View {
        NavigationStack {
            Form {
                Section {
                    Toggle("–ü–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏", isOn: $moveUnfinishedTasks)
                        .onChange(of: moveUnfinishedTasks) { _, newValue in
                            if !newValue {
                                // –ï—Å–ª–∏ –æ—Ç–∫–ª—é—á–∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å –∑–∞–¥–∞—á, –æ—Ç–∫–ª—é—á–∞–µ–º –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
                                increasePriority = false
                            }
                        }
                    
                    if moveUnfinishedTasks {
                        Toggle("–ü–æ–≤—ã—à–∞—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–∏ –ø–µ—Ä–µ–Ω–æ—Å–µ", isOn: $increasePriority)
                            .onChange(of: increasePriority) { _, newValue in
                                // –ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —á–∞—Å—Ç–æ—Ç—É
                                if !newValue {
                                    priorityIncreaseFrequency = 0
                                }
                            }
                        
                        if increasePriority {
                            Picker("–ß–∞—Å—Ç–æ—Ç–∞ –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞", selection: $priorityIncreaseFrequency) {
                                ForEach(frequencyOptions, id: \.0) { option in
                                    Text(option.1).tag(option.0)
                                }
                            }
                        }
                    }
                } header: {
                    Text("–ü–µ—Ä–µ–Ω–æ—Å –∑–∞–¥–∞—á")
                } footer: {
                    Text("–ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –ø—Ä–∏ —Å–º–µ–Ω–µ –¥–∞—Ç—ã. –ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∑–∞–¥–∞—á–∏ –±—É–¥—É—Ç –ø–æ–≤—ã—à–∞—Ç—å —Å–≤–æ–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —á–∞—Å—Ç–æ—Ç–µ.")
                }
            }
            .navigationTitle("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–¥–∞—á")
            .navigationBarTitleDisplayMode(.inline)
            .toolbar {
                ToolbarItem(placement: .navigationBarLeading) {
                    Button(action: { dismiss() }) {
                        HStack(spacing: 2) {
                            Image(systemName: "chevron.backward")
                                .foregroundColor(themeManager.isDarkMode ? .yellow : .red1)
                            Text("–ù–∞–∑–∞–¥")
                                .foregroundColor(themeManager.isDarkMode ? .yellow : .red1)
                        }
                    }
                }
                
                ToolbarItem(placement: .navigationBarTrailing) {
                    Button(action: {
                        saveSettings()
                        dismiss()
                    }) {
                        Text("–ì–æ—Ç–æ–≤–æ")
                            .fontWeight(.medium)
                            .foregroundColor(themeManager.isDarkMode ? .yellow : .red1)
                    }
                }
            }
            .preferredColorScheme(themeManager.isDarkMode ? .dark : .light)
            .background(themeManager.isDarkMode ? 
                Color(red: 0.098, green: 0.098, blue: 0.098) : 
                Color(red: 0.95, green: 0.95, blue: 0.95))
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    private func saveSettings() {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ @AppStorage
        // –ù–æ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª—é–±—É—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É
        
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º UserDefaults
        UserDefaults.standard.synchronize()
        
        // –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        print("üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–¥–∞—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: –ø–µ—Ä–µ–Ω–æ—Å=\(moveUnfinishedTasks), –ø–æ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞=\(increasePriority), —á–∞—Å—Ç–æ—Ç–∞=\(priorityIncreaseFrequency)")
    }
}

#Preview {
    SettingsTask()
}

